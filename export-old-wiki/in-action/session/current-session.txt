+index:WAComponent!session+From within your components the current session is always available by sending ==self session==. This can happen during the rendering phase or while processing the callbacks: you get the same object in either case. To demonstrate a way to access the current session, quickly add the following code to a rendering method in your application:==html anchor==    callback: [ self show: (WAInspector current on: self session) ];==    with: 'Inspect Session'This displays a link that opens a Seaside inspector on the session. Click the link and explore the contents of the active session. To get an inspector within your image you can use the code ==self session inspect==. In both cases you should be able to navigate through the object.In rare cases it might be necessary to access the current session from outside your component tree. Think twice before doing that though: it is considered to be extremely bad coding style to depend on the session from outside your component tree. Anyway, in some cases it might come in handy. In such a case, you can use the following expressions: +index:WACurrentSession+ +index:WARequestContext+==WARequestContext value session.But again you should avoid accessing the session from outside of the component tree. 