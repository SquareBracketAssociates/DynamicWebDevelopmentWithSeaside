First, we define a component to see the item list. For that, we define a new component named ==ToDoListView==.==WAComponent subclass: #ToDoListView==    instanceVariableNames: ''==    classVariableNames: ''==    poolDictionaries: ''==    category: 'ToDo-View'We can register the application by defining the class method ==initialize== as shown and by executing ==ToDoListView>>initialize==.==ToDoListView class>>initialize==    "self initialize"==    WAAdmin register: self asApplicationAt: 'todo'You can see that the todo application is now registered by pointing your browser to *http://localhost:8080/config/* as shown in *ref:todoregistered*.+todoregistered|width=40%+If you click on the todo link in the config list you will get an empty browser window. This is to be expected since so far the application does not do any rendering. Now if you click on the halo you should see that your application is present on the page as shown in *ref:halosOnEmptyTodo*.+halosonemptytodo|width=80%+Now we are ready to work on the rendering of our component.