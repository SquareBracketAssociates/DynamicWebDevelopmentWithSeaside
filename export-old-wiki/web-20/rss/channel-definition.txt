Next we create the contents of the feed. To do so we need to access our model and pass the data to the RSS renderer. As a first step we render the required tags of the channel element.==ToDoRssFeed>>model==    ^ ToDoList default==ToDoRssFeed>>renderContentOn: rss==    self renderChannelOn: rss==ToDoRssFeed>>renderChannelOn: rss==    rss title: self model title.==    rss link: 'http://localhost:8080/todo'.==    rss description: 'There are always things left to do.'A full list of all available tags is available in the following table.|{!RSS Tag |{!Selector |!Description| ==title== | +index:RRRssRenderCanvas!title+ ==title:== | The name of the channel (required).| ==link== | +index:RRRssRenderCanvas!link+ ==link:== | The URL to website corresponding to the channel (required).| ==description== | +index:RRRssRenderCanvas!description+ ==description:== | Phrase or sentence describing the channel (required).| ==language== | +index:RRRssRenderCanvas!language+ ==language:== | The language the channel is written in.| ==copyright== | +index:RRRssRenderCanvas!copyright+ ==copyright:== | Copyright notice for content in the channel.| ==managingEditor== | +index:RRRssRenderCanvas!managingEditor+ ==managingEditor:== | Email address for person responsible for editorial content.| ==webMaster== | +index:RRRssRenderCanvas!webMaster+ ==webMaster:== | Email address for person responsible for technical issues.| ==pubDate== | +index:RRRssRenderCanvas!pubDate+ ==pubDate:== | The publication date for the content in the channel.| ==lastBuildDate== | +index:RRRssRenderCanvas!lastBuildDate+ ==lastBuildDate:== | The last time the content of the channel changed.| ==category== | +index:RRRssRenderCanvas!category+ ==category:== | Specify one or more categories that the channel belongs to.| ==generator== | +index:RRRssRenderCanvas!generator+ ==generator:== | A string indicating the program used to generate the channel.